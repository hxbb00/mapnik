name: download_vcpkg_deps and Upload

on:
    workflow_dispatch:

env:
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"
  VCPKG_NUGET_REPOSITORY: https://github.com/mathisloge/vcpkg-nuget.git

jobs:
  checkSource:
    name: Check Source Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: pre-commit/action@v3.0.1

  buildAndTest:
    name: >-
      download_vcpkg_deps
      (${{ matrix.os }})
    needs: checkSource
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1

      # use the output from the `generate-uuid` step
      - name: Get the UUID
        run: echo "UUID is ${{ steps.generate-uuid.outputs.uuid }}"

      - name: "Install required system packages"
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install ninja OpenCppCoverage
            echo "C:\Program Files\OpenCppCoverage" >> ${GITHUB_PATH}
          elif [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"
            sudo apt install -y gperf libxxf86vm-dev ninja-build postgresql-client lcov autoconf-archive
          else
            brew install automake ninja lcov autoconf-archive
          fi

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: checkout mapnik
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: setup vcpkg
        uses: ./.github/actions/setup_vcpkg
        with:
          vcpkg-sha: e105a86c97b8ab13d4dbe3f7bd9ebc17ece31634
          nuget-source: https://nuget.pkg.github.com/mapnik/index.json
          nuget-username: ${{ github.actor }}
          nuget-pat: ${{ secrets.GITHUB_TOKEN }}

      - id: lc_platform
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ runner.os }}

      - name: set lower case runner os
        shell: bash
        run: |
          echo "PRESET=${{ steps.lc_platform.outputs.lowercase }}-ci" >>${GITHUB_ENV}

      - name: Configure CMake
        shell: bash
        run: |
          ./vcpkg/vcpkg.exe install --triplet=x64-windows --only-downloads

      - name: pack files
        shell: cmd
        if: runner.os == 'Windows'
        run: |
          7z a vcpkg_deps_downloads.zip ./vcpkg/downloads

      - name: upload out artifacts
        uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        env:
          JOBTIME: "${{ steps.generate-uuid.outputs.uuid }}"
        with:
          name: vcpkg_deps_downloads-${{ runner.os }}-${{ env.JOBTIME }}
          path: vcpkg_deps_downloads.zip
